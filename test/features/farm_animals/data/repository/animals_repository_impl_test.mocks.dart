// Mocks generated by Mockito 5.4.2 from annotations
// in pontaagro/test/features/farm_animals/data/repository/animals_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pontaagro/core/data/database/db_helper.dart' as _i2;
import 'package:pontaagro/features/farm_animals/data/models/animals_model.dart'
    as _i5;
import 'package:pontaagro/features/farm_animals/data/repository/animals_repository_impl.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDbHelper_0 extends _i1.SmartFake implements _i2.DbHelper {
  _FakeDbHelper_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AnimalsRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnimalsRepositoryImpl extends _i1.Mock
    implements _i3.AnimalsRepositoryImpl {
  MockAnimalsRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DbHelper get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDbHelper_0(
          this,
          Invocation.getter(#database),
        ),
      ) as _i2.DbHelper);
  @override
  _i4.Future<int> deleteAnimal(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteAnimal,
          [id],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<List<_i5.AnimalsModel>> getAnimals(int? farmId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAnimals,
          [farmId],
        ),
        returnValue:
            _i4.Future<List<_i5.AnimalsModel>>.value(<_i5.AnimalsModel>[]),
      ) as _i4.Future<List<_i5.AnimalsModel>>);
  @override
  _i4.Future<int> updateAnimal(_i5.AnimalsModel? animal) => (super.noSuchMethod(
        Invocation.method(
          #updateAnimal,
          [animal],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<bool> createAnimalList(List<_i5.AnimalsModel>? animal) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAnimalList,
          [animal],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
